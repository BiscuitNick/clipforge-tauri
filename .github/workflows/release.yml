name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-14'  # arm64 runner
            args: '--target aarch64-apple-darwin'
    # Windows and Linux builds disabled - only macOS is currently verified to work
    # The application uses macOS-specific frameworks (ScreenCaptureKit) for screen recording
    # Future releases may include cross-platform support
    #   - platform: 'ubuntu-22.04'
    #     args: ''
    #   - platform: 'windows-latest'
    #     args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Platform-specific dependencies (currently macOS only)
      - name: Install FFmpeg (macOS)
        if: matrix.platform == 'macos-14'
        run: brew install ffmpeg

      # Commented out - Windows and Linux builds disabled
      # - name: Install dependencies (Ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf ffmpeg
      #
      # - name: Install FFmpeg (Windows)
      #   if: matrix.platform == 'windows-latest'
      #   run: |
      #     choco install ffmpeg -y

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-14' && 'aarch64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './clipforge-tauri/src-tauri -> target'

      - name: Install frontend dependencies
        run: |
          cd clipforge-tauri
          npm install

      - name: Build the app
        id: tauri-build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./clipforge-tauri
          tagName: ${{ github.ref_name }}
          releaseName: 'ClipForge v__VERSION__'
          releaseBody: |
            ## What's New in ClipForge v__VERSION__

            ### Platform Support
            **âœ… macOS Only** - This release is verified to work on macOS (Apple Silicon and Intel)

            Windows and Linux builds are not included in this release as they have not been tested. The application uses macOS-specific frameworks (ScreenCaptureKit) for optimal recording performance.

            ### Latest Updates
            - **Fixed**: Timeline video playback black screen bug
              - Video preview now correctly resumes playback after clip ends
              - Playback works reliably when moving between clips and gaps
              - Video element properly maintains state during timeline navigation
            - Native screen recording with ScreenCaptureKit
            - Picture-in-Picture webcam support
            - Professional timeline editing with keyboard shortcuts

            ### Installation (macOS)
            1. Download the `.dmg` file below
            2. Open the DMG and drag ClipForge to Applications
            3. Install FFmpeg: `brew install ffmpeg`
            4. Launch ClipForge from Applications

            ### Requirements
            - macOS 11.0 (Big Sur) or later
            - FFmpeg installed via Homebrew: `brew install ffmpeg`

            See the [README](https://github.com/BiscuitNick/clipforge-tauri/blob/main/clipforge-tauri/README.md) for full documentation and keyboard shortcuts.
          releaseDraft: true
          prerelease: false
          includeRelease: true
          includeDebug: false
          includeUpdaterJson: true
          args: ${{ matrix.args }}

      - name: List built artifacts (debug)
        run: |
          echo "=== Checking macOS bundle directory ==="
          ls -la clipforge-tauri/src-tauri/target/release/bundle/ || echo "Bundle directory not found"
          echo "=== macOS DMG ==="
          ls -la clipforge-tauri/src-tauri/target/release/bundle/dmg/ || echo "DMG not found"
          echo "=== macOS App Bundle ==="
          ls -la clipforge-tauri/src-tauri/target/release/bundle/macos/ || echo "App bundle not found"
        shell: bash